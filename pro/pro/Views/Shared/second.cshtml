@using pro.Models
@{
    dbaseEntities1 db = new dbaseEntities1();
    List<city> cities = db.cities.OrderBy(x => x.cityname).ToList();
    ViewBag.city = cities;
    
    }
    <script src="~/Scripts/jquery-1.7.1.min.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.unobtrusive-ajax.js" type="text/javascript"></script>
<script src="../../Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>

<script type="text/javascript">
    function load() {
        var value = $("#ddlstate").val();

        if (value != "Select") {
            $.ajax({
                url: '@Url.Action("area", "extra")',
                type: 'POST',
                data: { "selectedvalue": value },

                dataType: 'Json',
                success: function (response) {
                    var items = "";

                    $.each(response.Objcity, function (i, item) {
                        items += "<option value=\"" + item + "\">" + item + "</option>";
                    });
                       $("#city").html(items);
                },
                error: function (error) {
                }
            });
        }

    }
         
        
        
</script>
<fieldset>
        <legend></legend>
        <br />

        <div class="editor-label">
            @Html.LabelFor(model =>cities)
        </div>
        <div class="editor-field">
@Html.DropDownList("ddlstate", new SelectList(ViewBag.city, "id", "cityname"),"Select City Name",new { onchange = "load()"})
</div>
    <br />
    <div class="editor-label">
            @Html.Label("area")
        </div>
    <select id="city" name="area" style="width: 200px">

    </select>
     
        